# ============================================
# SYNTHIA AGENT SYSTEM - ENVIRONMENT CONFIG
# 4 Active Agents + 2 Helper Libraries
# ============================================

# ============================================
# AGENTVERSE CONFIGURATION
# ============================================
# After deploying each agent to Agentverse, you'll get these values
# Get them from: https://agentverse.ai

# Agent Seeds (Generate unique random phrases for each)
ORCHESTRATOR_SEED=orchestrator_unique_seed_phrase_here
ASI_ONE_SEED=asi_one_unique_seed_phrase_here
ANALYZER_SEED=analyzer_unique_seed_phrase_here
BLOCKCHAIN_SEED=blockchain_unique_seed_phrase_here

# Agent Mailbox Keys (From Agentverse dashboard after creating each agent)
ORCHESTRATOR_MAILBOX_KEY=your_orchestrator_mailbox_key_here
ASI_ONE_MAILBOX_KEY=your_asi_one_mailbox_key_here
WALLET_ANALYZER_MAILBOX_KEY=your_analyzer_mailbox_key_here
BLOCKCHAIN_MAILBOX_KEY=your_blockchain_mailbox_key_here

# Agent Addresses (Populated AFTER deploying to Agentverse)
# Format: agent1q... (you'll get these after deployment)
ORCHESTRATOR_ADDRESS=agent1qxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ASI_ONE_CHAT_ADDRESS=agent1qxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
WALLET_ANALYZER_ADDRESS=agent1qxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
BLOCKCHAIN_ADDRESS=agent1qxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ============================================
# HEDERA BLOCKCHAIN CONFIGURATION
# ============================================
# Get Hedera testnet account from: https://portal.hedera.com

# Hedera Account (Format: 0.0.xxxxx)
HEDERA_ACCOUNT_ID=0.0.123456

# Hedera Private Key (Format: 302e... DER encoded)
HEDERA_PRIVATE_KEY=302e020100300506032b65700422042012345678...

# Hedera Network
HEDERA_NETWORK=testnet

# HCS Topic ID (Created by hedera_services_integration.py on first run)
# Leave empty initially, will be populated automatically
HCS_AUDIT_TOPIC_ID=

# HTS Token ID (Created by hedera_services_integration.py on first run)  
# Leave empty initially, will be populated automatically
HTS_REPUTATION_TOKEN_ID=

# ============================================
# SMART CONTRACT ADDRESSES
# ============================================
# Deployed contract addresses on Hedera testnet
# Get these after running: npx hardhat run scripts/deploy_enhanced.js

SYNTHIA_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000
NFT_CONTRACT_ADDRESS=0x0000000000000000000000000000000000000000

# ============================================
# WEB3 / RPC CONFIGURATION
# ============================================
# Hedera JSON-RPC Relay (for EVM compatibility)
HEDERA_RPC_URL=https://testnet.hashio.io/api

# ============================================
# OPTIONAL: EXTERNAL APIS
# ============================================
# For enhanced wallet analysis (optional)

# Etherscan API (for transaction data - optional)
# ETHERSCAN_API_KEY=your_etherscan_api_key_here

# OpenAI API (for ASI:One NLP enhancements - optional)
# OPENAI_API_KEY=sk-your_openai_key_here

# ============================================
# DEVELOPMENT / TESTING
# ============================================
# Set to 'true' for verbose logging
DEBUG=false

# Test wallet addresses (for development)
TEST_WALLET_1=0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb
TEST_WALLET_2=0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045

# ============================================
# NOTES
# ============================================
# Active Agents (4):
#   1. orchestrator.py (Port 8000)
#   2. asi_one_chat_agent.py (Port 8004)
#   3. wallet_analyzer.py (Port 8001)
#   4. blockchain_agent.py (Port 8002)
#
# Helper Libraries (2):
#   - metta_reasoning_engine.py (imported by wallet_analyzer)
#   - hedera_services_integration.py (imported by blockchain_agent)
#
# Security:
#   1. NEVER commit this file to Git
#   2. Add .env to your .gitignore
#   3. Keep your private keys secure
#   4. Rotate keys if compromised
#   5. Use different values for production